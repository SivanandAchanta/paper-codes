function [] = stmsasb_ftext(wavpath,specdir,msasbdir,apdir,msasbapdir,f0dir,trainlistpath)


if nargin == 6
    system(['ls', ' ', wavpath, ' ', '>', ' ','temptrnlist.txt'])
    trainlistpath = 'temptrnlist.txt';
end

mkdir(specdir)
mkdir(msasbdir)
% mkdir(apdir)
mkdir(msasbapdir)
mkdir(f0dir)

% setpaths
addpath('/media/newHDD/hts_voices/STRAIGHTV40');
addpath('/media/newHDD/BDL_DNN/mfiles/featext/speech'); % for HTS deltas

% STRAIGHT Params
fs = 16000;
frshift_s = 80 ; % frame shift in samples
UPPERF0 = 580;
LOWERF0 = 60;

frshiftms = round((frshift_s/fs)*1000); % frameshift in ms
prm.F0frameUpdateInterval = frshiftms;
prm.spectralUpdateInterval = frshiftms;
prm.F0searchUpperBound = UPPERF0;
prm.F0searchLowerBound = LOWERF0;

% msasb params
nfft = 1024;
nfftby2 = round(nfft/2 + 1);
nbands = 80;
bw_band = fs/2/nbands;
bef = bw_band:bw_band:(fs/2 - bw_band);
bcf = bw_band/2:bw_band:(fs/2);
nbef = round((bef/fs)*nfft + 1);
nbcf = round((bcf/fs)*nfft + 1);
x = [1 nbcf nfftby2];
xi = [1:nfftby2];
w1 = [0.5 0 -0.5];  % have to reverse than the regular HTS format becaus of the use of filter fuction for computing deltas
w2 = [1 -2 1]; % symmetric fn and hence reverse is the same as original for double deltas

nbands_ap = 50;
bw_band_ap = fs/2/nbands_ap;
bef_ap = bw_band_ap:bw_band_ap:(fs/2 - bw_band_ap);
bcf_ap = bw_band_ap/2:bw_band_ap:(fs/2);
nbef_ap = round((bef_ap/fs)*nfft + 1);
nbcf_ap = round((bcf_ap/fs)*nfft + 1);
x_ap = [1 nbcf_ap nfftby2];


fid = fopen(trainlistpath);

while ~feof(fid)
    
    fname = fgetl(fid)
    [filename,tok] = strtok(fname,'.');
    
    if strcmp(tok,'.wav')
        [y,fs] = wavread(strcat(wavpath,filename,'.wav'));
        filename
        %%%%%%%%%%%%%%%%%%%%% STRAIGHT AbS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        
        % STRAIGHT Analysis by Synthesis
        [f0raw, st_ap] = exstraightsource(y,fs,prm);
        [st_sgram] = exstraightspec(y, f0raw, fs, prm);
        
        % MSASB modification applied to STRAIGHT Spectrum
        nframe = min([size(st_sgram,2) length(f0raw) size(st_ap,2)]);
        f0raw = f0raw(1:nframe);
        st_ap = st_ap(:,1:nframe);
        st_sgram = st_sgram(:,1:nframe);
        se_bi = zeros(nbands+2,nframe);
        apebi = zeros(nbands_ap+2,nframe);
        
        for ii = 1:size(st_sgram,2)
            % compute the maximal spectral amplitudes in sub bands
            se_bi(1,ii) = st_sgram(1,ii);
            se_bi(2,ii) = max(st_sgram(2:nbef(1),ii));
            for k = 2:nbands-1
                se_bi(k+1,ii) = max(st_sgram(nbef(k-1) + 1:nbef(k),ii));
            end
            se_bi(k+2,ii) = max(st_sgram(nbef(k) + 1:end - 1,ii));
            se_bi(nbands + 2,ii) = st_sgram(end,ii);
            
            % compute the maximal spectral amplitudes in sub bands
            apebi(1,ii) = st_ap(1,ii);
            apebi(2,ii) = max(st_ap(2:nbef_ap(1),ii));
            for k = 2:nbands_ap-1
                apebi(k+1,ii) = max(st_ap(nbef_ap(k-1) + 1:nbef_ap(k),ii));
            end
            apebi(k+2,ii) = max(st_ap(nbef_ap(k) + 1:end - 1,ii));
            apebi(nbands_ap + 2,ii) = st_ap(end,ii);
            
        end
        
        
        f0raw = f0raw';
        vuv = zeros(size(f0raw));
        vuv(f0raw~=0) = 1;
        
        
        % compute deltas for st-msasb
        lsebi = 20*log10(se_bi + 1e-6);
        d = deltas_hts_dellis(lsebi, w1);
        dsebi = [lsebi;d]; % 2dxN matrix
        
        lsgram = 20*log10(st_sgram + 1e-6);
        d = deltas_hts_dellis(lsgram, w1);
        dsgram = [lsgram;d]; % 2dxN matrix
        
        % compute deltas for aperidoicity
        d = deltas_hts_dellis(apebi, w1);
        dapebi = [apebi;d]; % 2dxN matrix
        
        
        dlmwrite(strcat(f0dir,filename,'.txt'),[f0raw(:) vuv(:)],'delimiter',' ');
        %         dlmwrite(strcat(apdir,filename,'.txt'),dap','delimiter',' ');
        dlmwrite(strcat(msasbapdir,filename,'.txt'),dapebi','delimiter',' ');
        dlmwrite(strcat(specdir,filename,'.txt'),dsgram','delimiter',' ');
        dlmwrite(strcat(msasbdir,filename,'.txt'),dsebi','delimiter',' ');
    end
end
fclose(fid);